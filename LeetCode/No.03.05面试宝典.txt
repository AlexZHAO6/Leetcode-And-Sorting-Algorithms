class SortedStack {
	Stack<Integer> stack;
	Stack<Integer> tmp;

    public SortedStack() {
    	stack = new Stack<>();
    	tmp = new Stack<>();

    }
    
    public void push(int val) {
    	if(stack.isEmpty())
    		stack.push(val);
    	else {
        	while(!stack.isEmpty() && val > stack.peek()) {
        		tmp.push(stack.pop());
        	}
        	
        	stack.push(val);
        	
        	while(!tmp.isEmpty()) {
        		stack.push(tmp.pop());
        	}
    		
    	}
    	


    }
    
    public void pop() {
    	if(!stack.isEmpty())
    		stack.pop();
    }
    
    public int peek() {
    	if(!stack.isEmpty())
    		return stack.peek();
    	
    	else
    		return -1;

    }
    
    public boolean isEmpty() {
    	return stack.isEmpty();

    }
}
