    public int longestValidParentheses(String s) {
    	char[] ls = s.toCharArray();
    	int len = ls.length;
    	if(len == 0)
    		return 0;
    	
    	int[] dp = new int[len];  	
    	int max = dp[0];

    	for(int i = 1; i < len; i ++) {
    		if(ls[i] == ')') {
    			if(ls[i-1] == '(') {
    				dp[i] = i - 2 >= 0 ? dp[i-2] + 2 : 2;
    			}
    				
    			else if(i - dp[i-1] > 0 && ls[i - dp[i-1] - 1] == '('){
    				dp[i] = dp[i-1] + (i - dp[i-1] >= 2 ? dp[i-dp[i-1]-2] : 0) + 2; 
    				
    			}
    		
    			max = Math.max(max, dp[i]);
    		}
    	}
    	
    	return max;

    }//dp