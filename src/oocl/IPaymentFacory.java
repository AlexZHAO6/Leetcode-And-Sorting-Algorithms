package oocl;

//Java工厂模式的优点包括：
//
//将对象的创建和使用分离，客户端只需要关心产品的接口，无需关心具体的实现类。
//通过工厂类统一管理对象的创建，可以更好地控制和管理对象的生命周期。
//可以实现对象的复用，避免重复创建相同的对象。
//可以动态地切换和扩展具体的产品类，增加新的产品类时不需要修改客户端代码。
//Java工厂模式的缺点包括：
//
//增加了代码的复杂性，需要额外编写工厂类。
//当产品类比较多时，工厂类会变得庞大，不易维护。
//工厂类一般是静态类或单例模式，不支持多态，限制了对工厂类的扩展。
//总体来说，Java工厂模式是一种常用的设计模式，可以提高代码的可维护性和扩展性，但在使用时需要权衡好代码的复杂性和可维护性之间的平衡。
public interface IPaymentFacory {
    public Payment create();
}
